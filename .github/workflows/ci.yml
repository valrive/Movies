#Pipeline de Aristidev para CI
#https://www.youtube.com/watch?v=Zfaev5IOBmI
name: CI

on:
#  [push]
  #on: [pull_request]

  push:
    branches: ["onlyPopularMovies", "feature/new-stuff-to-ci"]
  pull_request:
    branches: ["onlyPopularMovies"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  start:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run sample script
        run: echo Hello, world


  lint:
    name: Perform lint check
    needs: [ start ]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

#      - name: Make Gradle executable
#        run: chmod +x ./gradlew

      - name: Run lint
        run: ./gradlew lintDevDebug

      - name: Upload html test report
        uses: actions/upload-artifact@v2
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html


  unit-test:
    name: Perform Unit Testing
    needs: [ lint ]
    runs-on: ubuntu-latest
#    runs-on: macos-latest # MacOS runs faster
    steps:
      - uses: actions/checkout@v4

      - name: Run tests
        run: ./gradlew test

      - name: Android Test Report
        if: ${{ always() }}
        uses: asadmansr/android-test-report-action@v1.2.0
#
#      - name: Upload test report
#        if: ${{ always() }}
#        uses: actions.upload-artifact@v2
#        with:
#          name: unit_test_report
#          path: app/build/reports/test/testDebugUnitTest/





#  assemble:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Setup JDK
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
##          cache: 'gradle' Se necesita especificar m√°s cosas
#
##         #ejecutar en la terminal el siguiente comando para evitar agregar las lineas al ci:
##         #git update-index --chmod=+x ./gradlew o solo gradlew
##      - name: Grant execute permission for gradlew
##        run: chmod +x gradlew
#
#      - name: Restore cache
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
##
#      - name: Assemble Debug
#        run: ./gradlew assembleDebug
##        run: ./gradlew build --no-daemon
